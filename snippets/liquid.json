{
  "Tag if": {
    "prefix": "if",
    "description": "Control flow tag: if",
    "body": [
      "{% if ${1:condition} %}",
      "\t$2",
      "{% endif %}"
    ]
  },
  "Tag else": {
    "prefix": "else",
    "description": "Control flow tag: else",
    "body": [
      "{% else %}",
      "\t"
    ]
  },
  "Tag elsif": {
    "prefix": "elsif",
    "description": "Control flow tag: elsif",
    "body": [
      "{% elsif ${1:condition} %}",
      "\t"
    ]
  },
  "Tag if else": {
    "prefix": "ifelse",
    "description": "Control flow tag: if else",
    "body": [
      "{% if ${1:condition} %}",
      "\t$2",
      "{% else %}",
      "\t$3",
      "{% endif %}"
    ]
  },
  "Tag if elsif": {
    "prefix": "ifelsif",
    "description": "Control flow tag: if elsif",
    "body": [
      "{% if ${1:condition} %}",
      "\t$2",
      "{% elsif ${3:condition} %}",
      "\t$4",
      "{% else %}",
      "\t$5",
      "{% endif %}"
    ]
  },
  "Tag endif": {
    "prefix": "endif",
    "description": "Control flow tag: endif",
    "body": [
      "{% endif %}"
    ]
  },
  "Tag unless": {
    "prefix": "unless",
    "description": "Control flow tag: unless",
    "body": [
      "{% unless ${1:condition} %}",
      "\t$2",
      "{% endunless %}"
    ]
  },
  "Tag endunless": {
    "prefix": "endunless",
    "description": "Control flow tag: endunless",
    "body": [
      "{% endunless %}"
    ]
  },
  "Tag case": {
    "prefix": "case",
    "description": "Control flow tag: case",
    "body": [
      "{% case ${1:variable} %}",
      "\t{% when ${2:condition} %}",
      "\t\t$3",
      "\t{% else %}",
      "\t\t$4",
      "{% endcase %}"
    ]
  },
  "Tag endcase": {
    "prefix": "endcase",
    "description": "Control flow tag: endcase",
    "body": [
      "{% endcase %}"
    ]
  },
  "Tag when": {
    "prefix": "when",
    "description": "Control flow tag: when",
    "body": [
      "{% when ${1:condition} %}",
      "$0"
    ]
  },
  "Tag cycle": {
    "prefix": "cycle",
    "description": "Iteration tag: cycle",
    "body": [
      "{% cycle \"${1:odd}\", \"${2:even}\" %}"
    ]
  },
  "Tag cycle group": {
    "prefix": "cyclegroup",
    "description": "Iteration tag: cycle group",
    "body": [
      "{% cycle \"${1:group name}\": \"${2:odd}\", \"${3:even}\" %}"
    ]
  },
  "Tag for": {
    "prefix": "for",
    "description": "Iteration tag: for",
    "body": [
      "{% for ${1:item} in ${2:collection} %}",
      "\t$3",
      "{% endfor %}"
    ]
  },
  "Tag endfor": {
    "prefix": "endfor",
    "description": "Control flow tag: endfor",
    "body": [
      "{% endfor %}"
    ]
  },
  "Tag Option limit": {
    "prefix": "limit",
    "description": "For loops option",
    "body": [
      "limit: ${1:5}"
    ]
  },
  "Tag Option offset": {
    "prefix": "offset",
    "description": "For loops option",
    "body": [
      "offset: ${1:0}"
    ]
  },
  "Tag Option reversed": {
    "prefix": "reversed",
    "description": "For loops option",
    "body": [
      "reversed"
    ]
  },
  "Tag break": {
    "prefix": "break",
    "description": "Iteration tag: break",
    "body": [
      "{% break %}"
    ]
  },
  "Tag continue": {
    "prefix": "continue",
    "description": "Iteration tag: continue",
    "body": [
      "{% continue %}"
    ]
  },
  "Tag tablerow": {
    "prefix": "tablerow",
    "description": "Iteration tag: tablerow",
    "body": [
      "{% tablerow ${1:item} in ${2:collection} cols: ${3:2} %}",
      "\t$4",
      "{% endtablerow %}"
    ]
  },
  "Tag endtablerow": {
    "prefix": "endtablerow",
    "description": "Control flow tag: endtablerow",
    "body": [
      "{% endtablerow %}"
    ]
  },
  "Tag assign": {
    "prefix": "assign",
    "description": "Variable tag: assign",
    "body": [
      "{% assign ${1:variable} = ${2:value} %}"
    ]
  },
  "Tag increment": {
    "prefix": "increment",
    "description": "Variable tag: increment",
    "body": [
      "{% increment ${1:variable} %}"
    ]
  },
  "Tag decrement": {
    "prefix": "decrement",
    "description": "Variable tag: decrement",
    "body": [
      "{% decrement ${1:variable} %}"
    ]
  },
  "Tag capture": {
    "prefix": "capture",
    "description": "Variable tag: capture",
    "body": [
      "{% capture ${1:variable} %}$2{% endcapture %}"
    ]
  },
  "Tag endcapture": {
    "prefix": "endcapture",
    "description": "Control flow tag: endcapture",
    "body": [
      "{% endcapture %}"
    ]
  },
  "Tag raw": {
    "prefix": "raw",
    "description": "Theme tag: raw",
    "body": [
      "{% raw %}$1{% endraw %}"
    ]
  },
  "Tag endraw": {
    "prefix": "endraw",
    "description": "Control flow tag: endraw",
    "body": [
      "{% endraw %}"
    ]
  },
  "Tag paginate": {
    "prefix": "paginate",
    "description": "Theme tag: paginate",
    "body": [
      "{% paginate ${1:collection.products} by ${2:12} %}",
      "\t{% for ${3:product} in ${1:collection.products} %}",
      "\t\t$4",
      "\t{% endfor %}",
      "{% endpaginate %}"
    ]
  },
  "Tag endpaginate": {
    "prefix": "endpaginate",
    "description": "Control flow tag: endpaginate",
    "body": [
      "{% endpaginate %}"
    ]
  },
  "Tag comment": {
    "prefix": "comment",
    "description": "Theme tag: comment",
    "body": [
      "{% comment %}$0{% endcomment %}"
    ]
  },
  "Tag endcomment": {
    "prefix": "endcomment",
    "description": "Control flow tag: endcomment",
    "body": [
      "{% endcomment %}"
    ]
  },
  "Tag comment, whitespaced": {
    "prefix": "comment-",
    "description": "Comment tag: comment, whitespaced",
    "body": [
      "{%- comment -%}$0{%- endcomment -%}"
    ]
  },
  "Tag if, whitespaced": {
    "prefix": "if-",
    "description": "Control flow tag: if, whitespaced",
    "body": [
      "{%- if ${1:condition} -%}",
      "\t$2",
      "{%- endif -%}"
    ]
  },
  "Tag else, whitespaced": {
    "prefix": "else-",
    "description": "Control flow tag: else, whitespaced",
    "body": [
      "{%- else -%}",
      "\t"
    ]
  },
  "Tag elsif, whitespaced": {
    "prefix": "elsif-",
    "description": "Control flow tag: elsif, whitespaced",
    "body": [
      "{%- elsif ${1:condition} -%}",
      "\t"
    ]
  },
  "Tag if else, whitespaced": {
    "prefix": "ifelse-",
    "description": "Control flow tag: if else, whitespaced",
    "body": [
      "{%- if ${1:condition} -%}",
      "\t$2",
      "{%- else -%}",
      "\t$3",
      "{%- endif -%}"
    ]
  },
  "Tag if elsif, whitespaced": {
    "prefix": "ifelsif-",
    "description": "Control flow tag: if elsif, whitespaced",
    "body": [
      "{%- if ${1:condition} -%}",
      "\t$2",
      "{%- elsif ${3:condition} -%}",
      "\t$4",
      "{%- else -%}",
      "\t$5",
      "{%- endif -%}"
    ]
  },
  "Tag unless, whitespaced": {
    "prefix": "unless-",
    "description": "Control flow tag: unless, whitespaced",
    "body": [
      "{%- unless ${1:condition} -%}",
      "\t$2",
      "{%- endunless -%}"
    ]
  },
  "Tag case, whitespaced": {
    "prefix": "case-",
    "description": "Control flow tag: case, whitespaced",
    "body": [
      "{%- case ${1:variable} -%}",
      "\t{%- when ${2:condition} -%}",
      "\t\t$3",
      "\t{%- else -%}",
      "\t\t$4",
      "{%- endcase -%}"
    ]
  },
  "Tag when, whitespaced": {
    "prefix": "when-",
    "description": "Control flow tag: when, whitespaced",
    "body": [
      "{%- when ${1:condition} -%}",
      "$0"
    ]
  },
  "Tag cycle, whitespaced": {
    "prefix": "cycle-",
    "description": "Iteration tag: cycle, whitespaced",
    "body": [
      "{%- cycle \"${1:odd}\", \"${2:even}\" -%}"
    ]
  },
  "Tag cycle group, whitespaced": {
    "prefix": "cyclegroup-",
    "description": "Iteration tag: cycle group, whitespaced",
    "body": [
      "{%- cycle \"${1:group name}\": \"${2:odd}\", \"${3:even}\" -%}"
    ]
  },
  "Tag for, whitespaced": {
    "prefix": "for-",
    "description": "Iteration tag: for, whitespaced",
    "body": [
      "{%- for ${1:item} in ${2:collection} -%}",
      "\t$3",
      "{%- endfor -%}"
    ]
  },
  "Tag continue, whitespaced": {
    "prefix": "continue-",
    "description": "Iteration tag: continue, whitespaced",
    "body": [
      "{%- continue -%}"
    ]
  },
  "Tag tablerow, whitespaced": {
    "prefix": "tablerow-",
    "description": "Iteration tag: tablerow, whitespaced",
    "body": [
      "{%- tablerow ${1:item} in ${2:collection} cols: ${3:2} -%}",
      "\t$4",
      "{%- endtablerow -%}"
    ]
  },
  "Tag assign, whitespaced": {
    "prefix": "assign-",
    "description": "Variable tag: assign, whitespaced",
    "body": [
      "{%- assign ${1:variable} = ${2:value} -%}"
    ]
  },
  "Tag capture, whitespaced": {
    "prefix": "capture-",
    "description": "Variable tag: capture, whitespaced",
    "body": [
      "{%- capture ${1:variable} -%}$2{%- endcapture -%}"
    ]
  },
  "Filter join": {
    "prefix": "join",
    "description": "Array filter: join",
    "body": "| join: \"${1:, }\""
  },
  "Filter first": {
    "prefix": "first",
    "description": "Array filter: first",
    "body": "| first"
  },
  "Filter last": {
    "prefix": "last",
    "description": "Array filter: last",
    "body": "| last"
  },
  "Filter concat": {
    "prefix": "concat",
    "description": "Array filter: concat",
    "body": "| concat: ${1:array}"
  },
  "Filter map": {
    "prefix": "map",
    "description": "Array filter: map",
    "body": "| map: \"${1:key}\""
  },
  "Filter reverse": {
    "prefix": "reverse",
    "description": "Array filter or String filter: reverse",
    "body": "| reverse"
  },
  "Filter size": {
    "prefix": "size",
    "description": "Array filter: size",
    "body": "| size"
  },
  "Filter sort": {
    "prefix": "sort",
    "description": "Array filter: sort",
    "body": "| sort: \"${1:key}\""
  },
  "Filter uniq": {
    "prefix": "uniq",
    "description": "Array filter: uniq",
    "body": "| uniq"
  },
  "Filter img tag": {
    "prefix": "img_tag",
    "description": "HTML filter: img tag",
    "body": "| img_tag"
  },
  "Filter img tag with parameters": {
    "prefix": "img_tag_param",
    "description": "HTML filter: img tag with parameters",
    "body": "| img_tag: \"${1:alt}\", \"${2:class}\""
  },
  "Filter script tag": {
    "prefix": "script_tag",
    "description": "HTML filter: script tag",
    "body": "| script_tag"
  },
  "Filter stylesheet tag": {
    "prefix": "stylesheet_tag",
    "description": "HTML filter: stylesheet tag",
    "body": "| stylesheet_tag"
  },
  "Filter abs": {
    "prefix": "abs",
    "description": "Math filter: abs",
    "body": "| abs"
  },
  "Filter ceil": {
    "prefix": "ceil",
    "description": "Math filter: ceil",
    "body": "| ceil"
  },
  "Filter divided by": {
    "prefix": "divided_by",
    "description": "Math filter: divided by",
    "body": "| divided_by: ${1:2}"
  },
  "Filter floor": {
    "prefix": "floor",
    "description": "Math filter: floor",
    "body": "| floor"
  },
  "Filter minus": {
    "prefix": "minus",
    "description": "Math filter: minus",
    "body": "| minus: ${1:1}"
  },
  "Filter plus": {
    "prefix": "plus",
    "description": "Math filter: plus",
    "body": "| plus: ${1:1}"
  },
  "Filter round": {
    "prefix": "round",
    "description": "Math filter: round",
    "body": "| round: ${1:0}"
  },
  "Filter times": {
    "prefix": "times",
    "description": "Math filter: times",
    "body": "| times: ${1:1}"
  },
  "Filter modulo": {
    "prefix": "modulo",
    "description": "Math filter: modulo",
    "body": "| modulo: ${1:2}"
  },
  "Filter money": {
    "prefix": "money",
    "description": "Money filter: money",
    "body": "| money"
  },
  "Filter money with currency": {
    "prefix": "money_with_currency",
    "description": "Money filter: money with currency",
    "body": "| money_with_currency"
  },
  "Filter money without trailing zeros": {
    "prefix": "money_without_trailing_zeros",
    "description": "Money filter: money without trailing zeros",
    "body": "| money_without_trailing_zeros"
  },
  "Filter money without currency": {
    "prefix": "money_without_currency",
    "description": "Money filter: money without currency",
    "body": "| money_without_currency"
  },
  "Filter append": {
    "prefix": "append",
    "description": "String filter: append",
    "body": "| append: \"${1:string}\""
  },
  "Filter camelcase": {
    "prefix": "camelcase",
    "description": "String filter: camelcase",
    "body": "| camelcase"
  },
  "Filter capitalize": {
    "prefix": "capitalize",
    "description": "String filter: capitalize",
    "body": "| capitalize"
  },
  "Filter downcase": {
    "prefix": "downcase",
    "description": "String filter: downcase",
    "body": "| downcase"
  },
  "Filter escape": {
    "prefix": "escape",
    "description": "String filter: escape",
    "body": "| escape"
  },
  "Filter handleize": {
    "prefix": "handleize",
    "description": "String filter: handleize",
    "body": "| handleize"
  },
  "Filter md5": {
    "prefix": "md5",
    "description": "String filter: md5",
    "body": "| md5"
  },
  "Filter newline to br": {
    "prefix": "newline_to_br",
    "description": "String filter: newline to br",
    "body": "| newline_to_br"
  },
  "Filter pluralize": {
    "prefix": "pluralize",
    "description": "String filter: pluralize",
    "body": "| pluralize: \"${1:item}\", \"${2:items}\""
  },
  "Filter prepend": {
    "prefix": "prepend",
    "description": "String filter: prepend",
    "body": "| prepend: \"${1:string}\""
  },
  "Filter remove": {
    "prefix": "remove",
    "description": "String filter: remove",
    "body": "| remove: \"${1:string}\""
  },
  "Filter remove first": {
    "prefix": "remove_first",
    "description": "String filter: remove first",
    "body": "| remove_first: \"${1:string}\""
  },
  "Filter replace": {
    "prefix": "replace",
    "description": "String filter: replace",
    "body": "| replace: \"${1:target}\", \"${2:replace}\""
  },
  "Filter replace first": {
    "prefix": "replace_first",
    "description": "String filter: replace first",
    "body": "| replace_first: \"${1:target}\", \"${2:replace}\""
  },
  "Filter slice (array/string)": {
    "prefix": "slice",
    "description": "String filter: slice an array or a string",
    "body": "| slice: ${1:0}, ${2:5}"
  },
  "Filter slice single character": {
    "prefix": "slice_single",
    "description": "String filter: slice with single parameter",
    "body": "| slice: ${1:at}"
  },
  "Filter split": {
    "prefix": "split",
    "description": "String filter: split",
    "body": "| split: \"${1:,}\""
  },
  "Filter strip": {
    "prefix": "strip",
    "description": "String filter: strip",
    "body": "| strip"
  },
  "Filter lstrip": {
    "prefix": "lstrip",
    "description": "String filter: lstrip",
    "body": "| lstrip"
  },
  "Filter rstrip": {
    "prefix": "rstrip",
    "description": "String filter: rstrip",
    "body": "| rstrip"
  },
  "Filter strip html": {
    "prefix": "strip_html",
    "description": "String filter: strip html",
    "body": "| strip_html"
  },
  "Filter strip newlines": {
    "prefix": "strip_newlines",
    "description": "String filter: strip newlines",
    "body": "| strip_newlines"
  },
  "Filter truncate": {
    "prefix": "truncate",
    "description": "String filter: truncate",
    "body": "| truncate: ${1:20}, \"${2:...}\""
  },
  "Filter truncatewords": {
    "prefix": "truncatewords",
    "description": "String filter: truncatewords",
    "body": "| truncatewords: ${1:5}, \"${2:...}\""
  },
  "Filter upcase": {
    "prefix": "upcase",
    "description": "String filter: upcase",
    "body": "| upcase"
  },
  "Filter url encode": {
    "prefix": "url_encode",
    "description": "String filter: url encode",
    "body": "| url_encode"
  },
  "Filter url escape": {
    "prefix": "url_escape",
    "description": "String filter: url escape",
    "body": "| url_escape"
  },
  "Filter url param escape": {
    "prefix": "url_param_escape",
    "description": "String filter: url param escape",
    "body": "| url_param_escape"
  },
  "Filter where": {
    "prefix": "where",
    "description": "Array filter: where",
    "body": "| where: \"${1:key}\", \"${2:value}\""
  },
  "Filter img url": {
    "prefix": "img_url",
    "description": "URL filter: img url",
    "body": "| img_url: \"${1:medium}\""
  }
}